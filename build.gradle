plugins {
    id 'java-library'
    id 'application'
    id 'maven-publish'
    id 'com.gradleup.shadow' version '8.3.5'
    id 'com.github.ben-manes.versions' version '0.51.0'
}

repositories {
    mavenCentral()
}

java {
    withSourcesJar()
    toolchain {
        // v55 (Java 11, LTS)
        // v61 (Java 17, LTS)
        // v65 (Java 21, LTS)
        // v67 (Java 23)
        languageVersion = JavaLanguageVersion.of(11)
    }
}

dependencies {
    api 'org.eclipse.jgit:org.eclipse.jgit:6.10.0.202406032230-r'

    // JDK17: 3.28.0
    implementation 'org.eclipse.jdt:org.eclipse.jdt.core:3.28.0'
    implementation 'org.eclipse.platform:org.eclipse.core.commands:3.8.0'
    implementation 'org.eclipse.platform:org.eclipse.core.contenttype:3.5.100'
    implementation 'org.eclipse.platform:org.eclipse.core.expressions:3.5.100'
    implementation 'org.eclipse.platform:org.eclipse.core.filesystem:1.7.0'
    implementation 'org.eclipse.platform:org.eclipse.core.jobs:3.8.0'
    implementation 'org.eclipse.platform:org.eclipse.core.resources:3.14.0'
    implementation 'org.eclipse.platform:org.eclipse.core.runtime:3.13.0'
    implementation 'org.eclipse.platform:org.eclipse.equinox.app:1.3.400'
    implementation 'org.eclipse.platform:org.eclipse.equinox.common:3.8.0'
    implementation 'org.eclipse.platform:org.eclipse.equinox.preferences:3.6.1'
    implementation 'org.eclipse.platform:org.eclipse.equinox.registry:3.6.100'
    implementation 'org.eclipse.platform:org.eclipse.osgi:3.11.2'
    implementation 'org.eclipse.platform:org.eclipse.text:3.6.0'

    implementation 'org.slf4j:slf4j-api:2.0.7'
    implementation 'ch.qos.logback:logback-classic:1.4.8'
    implementation 'com.google.guava:guava:33.3.1-jre'
    implementation 'com.google.code.gson:gson:2.11.0'
    implementation 'info.picocli:picocli:4.7.6'
    implementation 'commons-io:commons-io:2.18.0'
    implementation 'com.googlecode.juniversalchardet:juniversalchardet:1.0.3'

    implementation 'org.jgrapht:jgrapht-core:1.5.2'
    implementation 'org.jgrapht:jgrapht-io:1.5.2'

    implementation 'org.xerial:sqlite-jdbc:3.47.1.0'
    implementation 'com.j256.ormlite:ormlite-jdbc:5.7'

    testImplementation 'junit:junit:4.13.2'

    compileOnly 'org.projectlombok:lombok:1.18.36'
    annotationProcessor 'org.projectlombok:lombok:1.18.36'
    testCompileOnly 'org.projectlombok:lombok:1.18.36'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.36'
}

jar {
    manifest {
        attributes "Main-Class": "jp.ac.titech.c.se.stein.Application"
    }
}

application {
    mainClass = "jp.ac.titech.c.se.stein.Application"
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}

shadowJar {
    minimize {
        exclude(dependency('org.xerial:sqlite-jdbc:.*'))
        exclude(dependency('ch.qos.logback:logback-classic:.*'))
    }
}

task executableJar(dependsOn: "shadowJar") {
    // cf. https://ujun.hatenablog.com/entry/2017/09/22/010209
    ext.destination = file("${buildDir}/libs/${project.name}.jar")
    doLast {
        destination.write('#!/bin/sh\n')
        destination.append('JAR=`which "$0" 2>/dev/null`; ')
        destination.append('[ $? -gt 0 -a -f "$0" ] && JAR="./$0"; ')
        destination.append('[ -n "$JAVA_HOME" ] && JAVA="$JAVA_HOME/bin/java" || JAVA=java; ')
        destination.append('exec "$JAVA" $JAVA_ARGS -jar "$JAR" "$@"; ')
        destination.append('exit 1\n')
        destination.append(shadowJar.outputs.files.singleFile.readBytes())
        destination.setExecutable(true)
    }
}
